{% extends 'base_logged.html.twig' %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment-with-locales.min.js"></script>
    <script>
        $(function () {
            moment.locale('en');
            $('[data-moment]').each(function () {
                $(this).text(moment.unix($(this).text()).fromNow());
            });
        });
    </script>
    <script>
        var secret = '{{ app.user.secret }}';
        var endpoint = '{{ webHook.endpoint }}';
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-bottom-right",
            "preventDuplicates": true,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "10000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        var responseHandlers = {
            '_subscribeWebHook': function (data) {
                //console.log(data);
            },
            '_forwardRequest': function (data) {
                var request = data.request;
                toastr.info('Click this notification to view details.', '<span class="label label-success">' + request.method + '</span> received on ' + endpoint + '!', {
                    'onclick': function () {
                        location.reload();
                    }
                });
            }
        };
        function handleMessage(msg) {
            var type = msg.type;
            delete msg.type;
            if (responseHandlers.hasOwnProperty(type)) {
                if (msg['status'] != 'ok') {
                    console.error('Response in error:', type, msg);
                } else {
                    delete msg['status'];
                    delete msg['comKey'];
                    responseHandlers[type](msg);
                }
            } else {
                console.error('Message type not handled.', type, msg);
            }
        }
        function call(type) {
            var comKey = Math.round(Math.random() * 10000);
            var msg = {
                "type": type,
                "comKey": comKey,
                "secret": secret,
                "endpoint": endpoint
            };
            window.conn.send(JSON.stringify(msg));
        }

        $(function () {
            window.conn = new WebSocket('{{ socket_server_url }}');
            window.conn.onopen = function (e) {
                call("subscribeWebHook");
            };

            window.conn.onmessage = function (e) {
                handleMessage(JSON.parse(e.data));
            };
        });

    </script>
{% endblock %}

{% block body %}

    <p>
        <a class="btn btn-default btn-sm" href="{{ path('webhook_index') }}">
            <i class="glyphicon glyphicon-backward"></i>
            Back to the list of all endpoints
        </a>
    </p>

    <h1><i class="glyphicon glyphicon-screenshot"></i> {{ url('notifications', {endpoint: webHook.endpoint}) }}</h1>



    <h3>Received notifications</h3>

    <p class="text-center">

        <a class="btn btn-default" href="{{ path('webhook_simulate_notification', {'id': webHook.id}) }}">
            <i class="glyphicon glyphicon-refresh"></i>
            Simulate notification
        </a>

        <a class="btn btn-default"
           {% if webHook.notifications | length %}href="{{ path('webhook_clear_notification', {'id': webHook.id}) }}"
           {% else %}disabled="disabled"{% endif %}>
            <i class="glyphicon glyphicon-trash"></i>
            Clear notifications
        </a>
    </p>

    {% if webHook.notifications | length %}
        <table class="table table-striped table-hover table-bordered">
            <thead>
            <tr>
                <th>Method</th>
                <th>Query parameters</th>
                <th>Request body (POST)</th>
                <th>Headers</th>
                <th>Created at</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            {% for notification in webHook.notifications %}
                {% set content = notification.content | json_decode(true) %}
                <tr id="notif-{{ notification.id }}">
                    <td>
                        <div class="label label-success">{{ content.method }}</div>
                    </td>
                    <td>
                        <table class="table table-striped table-condensed">
                            {% for key, item in content.query %}
                                <tr>
                                    <th class="text-right">{{ key }}</th>
                                    <td>{{ item|join(';') }}</td>
                                </tr>
                            {% endfor %}
                        </table>
                    </td>
                    <td>
                        {% if content.body %}
                            {% set params = parse_str(content.body) %}
                            {% if params %}
                                <table class="table table-striped table-condensed">

                                    {% for key, item in params %}
                                        <tr>
                                            <th class="text-right">{{ key }}</th>
                                            <td>{{ item|join(';') }}</td>
                                        </tr>
                                    {% endfor %}
                                </table>
                            {% else %}
                                <code>{{ content.body }}</code>
                            {% endif %}
                        {% else %}
                            No post content.
                        {% endif %}
                    </td>
                    <td>
                        <table class="table table-striped table-condensed">
                            {% for key, item in content.headers %}
                                <tr>
                                    <th class="text-right">{{ key }}</th>
                                    <td>{{ item|join(';') }}</td>
                                </tr>
                            {% endfor %}
                        </table>
                    </td>
                    <td>
                        <strong data-moment="1">{{ notification.createdAt | date('U') }}</strong><br>
                        <small>{{ notification.createdAt | date('Y-m-d H:i:s') }}</small>
                    <td>
                        <a class="btn btn-default btn-xs"
                           href="{{ path('webhook_replay_notification', {id: notification.id}) }}">
                            <i class="glyphicon glyphicon-refresh"></i> Replay
                        </a>
                    </td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    {% else %}
        <br>
        <div class="well">
            <h3>What a fresh URL!</h3>
            <p>No notification sent on this URL.
                Impatient ? Just <a href="{{ path('webhook_simulate_notification', {id: webHook.id}) }}">simulate a
                    notification</a>.
            </p>
        </div>
    {% endif %}
{% endblock %}
